{"version":3,"sources":["functions/calculateWinner.js","index.js"],"names":["calculateWinner","squares","x","y","COL_MAX_LENGTH","length","ROW_MAX_LENGTH","playerMark","winner","map","rightTotal","rowRight","filter","mark","leftTotal","rowLeft","upTotal","colUp","downTotal","colDown","upperRightTotal","upperRight","upperLeftTotal","upperLeft","bottomRightTotal","bottomRight","bottomLeftTotal","bottomLeft","results","helpCheckWin","counter","oldMap","JSON","parse","stringify","push","loopCheckingMarks","Square","chess","value","onClick","className","Board","props","renderSquare","rowNum","i","rows","col","j","renderRows","Game","useState","history","Array","fill","stepNumber","xIsNet","state","setState","current","moves","step","move","desc","slice","jumpTo","status","saveBtn","formattedToday","Date","toISOString","html2canvas","document","querySelector","then","canvas","toBlob","blob","saveAs","saveBoardStatus","winnerMark","newSquares","concat","handkeClick","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9762be5f.chunk.js","sourcesContent":["function loopCheckingMarks(\n  squares,\n  x,\n  y,\n  COL_MAX_LENGTH,\n  ROW_MAX_LENGTH,\n  counter,\n  playerMark,\n  oldMap\n) {\n  const map = JSON.parse(JSON.stringify(oldMap));\n  while (\n    y + counter <= ROW_MAX_LENGTH &&\n    squares[x][y + counter] === playerMark\n  ) {\n    map.rowRight.push(squares[x][y + counter]);\n    counter++;\n  }\n  counter = 1;\n  while (y - counter >= 0 && squares[x][y - counter] === playerMark) {\n    map.rowLeft.push(squares[x][y - counter]);\n    counter++;\n  }\n  counter = 1;\n  while (\n    x + counter <= COL_MAX_LENGTH &&\n    squares[x + counter][y] === playerMark\n  ) {\n    map.colDown.push(squares[x + counter][y]);\n    counter++;\n  }\n  counter = 1;\n  while (x - counter >= 0 && squares[x - counter][y] === playerMark) {\n    map.colUp.push(squares[x - counter][y]);\n    counter++;\n  }\n  counter = 1;\n  while (\n    x - counter >= 0 &&\n    y - counter >= 0 &&\n    squares[x - counter][y - counter] === playerMark\n  ) {\n    map.upperLeft.push(squares[x - counter][y - counter]);\n    counter++;\n  }\n  counter = 1;\n  while (\n    x - counter >= 0 &&\n    y + counter <= ROW_MAX_LENGTH &&\n    squares[x - counter][y + counter] === playerMark\n  ) {\n    map.upperRight.push(squares[x - counter][y + counter]);\n    counter++;\n  }\n  counter = 1;\n  while (\n    x + counter <= COL_MAX_LENGTH &&\n    y + counter <= ROW_MAX_LENGTH &&\n    squares[x + counter][y + counter] === playerMark\n  ) {\n    map.bottomRight.push(squares[x + counter][y + counter]);\n    counter++;\n  }\n  counter = 1;\n\n  while (\n    x + counter <= COL_MAX_LENGTH &&\n    y - counter >= 0 &&\n    squares[x + counter][y - counter] === playerMark\n  ) {\n    map.bottomLeft.push(squares[x + counter][y - counter]);\n    counter++;\n  }\n\n  return map;\n}\n\nfunction calculateWinner(squares, x, y) {\n  if (squares[x][y] === null) {\n    return;\n  }\n  const COL_MAX_LENGTH = squares[0].length - 1;\n  const ROW_MAX_LENGTH = squares.length - 1;\n  const playerMark = squares[x][y];\n  let counter = 1;\n  const map = {\n    rowRight: [],\n    colDown: [],\n    rowLeft: [],\n    colUp: [],\n    upperLeft: [],\n    upperRight: [],\n    bottomLeft: [],\n    bottomRight: [],\n  };\n\n  const newMap = loopCheckingMarks(\n    squares,\n    x,\n    y,\n    COL_MAX_LENGTH,\n    ROW_MAX_LENGTH,\n    counter,\n    playerMark,\n    map\n  );\n\n  const winner = helpCheckWin(newMap, playerMark);\n  if (winner) {\n    return winner;\n  }\n  return null;\n}\n\nfunction helpCheckWin(map, playerMark) {\n  const rightTotal = map.rowRight.filter((mark) => mark === playerMark).length;\n  const leftTotal = map.rowLeft.filter((mark) => mark === playerMark).length;\n  const upTotal = map.colUp.filter((mark) => mark === playerMark).length;\n  const downTotal = map.colDown.filter((mark) => mark === playerMark).length;\n\n  const upperRightTotal = map.upperRight.filter((mark) => mark === playerMark)\n    .length;\n  const upperLeftTotal = map.upperLeft.filter((mark) => mark === playerMark)\n    .length;\n  const bottomRightTotal = map.bottomRight.filter((mark) => mark === playerMark)\n    .length;\n  const bottomLeftTotal = map.bottomLeft.filter((mark) => mark === playerMark)\n    .length;\n  const results = {\n    rightTotal,\n    leftTotal,\n    upTotal,\n    downTotal,\n    upperRightTotal,\n    upperLeftTotal,\n    bottomRightTotal,\n    bottomLeftTotal,\n  };\n\n  if (results.rightTotal === 4 || results.leftTotal === 4) {\n    return playerMark;\n  } else if (results.upTotal === 4 || results.downTotal === 4) {\n    return playerMark;\n  } else if (\n    results.rightTotal + results.leftTotal === 4 ||\n    results.upTotal + results.downTotal === 4\n  ) {\n    return playerMark;\n  } else if (results.upperLeftTotal === 4 || results.bottomRightTotal === 4) {\n    return playerMark;\n  } else if (results.upperRightTotal === 4 || results.bottomLeftTotal === 4) {\n    return playerMark;\n  } else if (\n    results.upperLeftTotal + results.bottomRightTotal === 4 ||\n    results.upperRightTotal + results.bottomLeftTotal === 4\n  ) {\n    return playerMark;\n  }\n\n  return null;\n}\nexport default calculateWinner;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport calculateWinner from \"./functions/calculateWinner\";\nimport html2canvas from \"html2canvas\";\nimport { saveAs } from \"file-saver\";\n\nfunction Square({ value, onClick }) {\n  let chess;\n  if (value === \"X\") {\n    chess = <div className={\"black \"}></div>;\n  } else if (value === \"O\") {\n    chess = <div className={\"white \"}></div>;\n  }\n  return (\n    <button className=\"square\" onClick={() => onClick()}>\n      {chess}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  function renderSquare(rowNum, i) {\n    return (\n      <Square\n        value={props.squares[rowNum][i]}\n        onClick={() => props.onClick(rowNum, i)}\n      />\n    );\n  }\n\n  function renderRows() {\n    const rows = [];\n    for (let i = 0; i < 19; i++) {\n      const col = [];\n      for (let j = 0; j < 19; j++) {\n        col.push(renderSquare(i, j));\n      }\n      rows.push(<div className=\"board-row\">{col}</div>);\n    }\n    return rows;\n  }\n\n  return <div>{renderRows()}</div>;\n}\nlet x = 0,\n  y = 0;\n\nfunction Game() {\n  const [state, setState] = useState({\n    history: [\n      {\n        squares: Array(19).fill(Array(19).fill(null)),\n      },\n    ],\n    stepNumber: 0,\n    xIsNet: true,\n  });\n  function handkeClick(j, i) {\n    const history = state.history.slice(0, state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const newSquares = JSON.parse(JSON.stringify(current.squares));\n    if (winner || newSquares[j][i]) {\n      return;\n    }\n    newSquares[j][i] = state.xIsNet ? \"X\" : \"O\";\n    x = j;\n    y = i;\n    setState({\n      history: history.concat([\n        {\n          squares: newSquares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNet: !state.xIsNet,\n    });\n  }\n\n  function jumpTo(step) {\n    setState({\n      history: state.history.slice(0, step + 1),\n      stepNumber: step,\n      xIsNet: step % 2 === 0,\n    });\n  }\n\n  const history = state.history;\n  const current = history[state.stepNumber];\n  const winner = calculateWinner(current.squares, x, y);\n  const moves = history.map((step, move) => {\n    const desc = move ? \"回到第 #\" + move + \" 步\" : \"回到起始點\";\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n  function saveBoardStatus() {\n    const today = new Date();\n    const formattedToday = today.toISOString().slice(0, 10);\n    html2canvas(document.querySelector(\".game-board\")).then((canvas) => {\n      const myCanvas = canvas;\n      myCanvas.toBlob((blob) => {\n        saveAs(blob, `${formattedToday + status}.png`);\n      });\n    });\n  }\n\n  const saveBtn = (\n    <li key={state.stepNumber}>\n      <button\n        onClick={() => {\n          saveBoardStatus();\n        }}\n      >\n        儲存棋譜\n      </button>\n    </li>\n  );\n  let status;\n  if (winner) {\n    const winnerMark = state.xIsNet === false ? \"黑\" : \"白\";\n    status = \"贏家: \" + winnerMark;\n  } else {\n    status = \"下一個玩家: \" + (state.xIsNet ? \"黑\" : \"白\");\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"title\">\n        <h3>Gomoku</h3>\n      </header>\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(rowNum, i) => handkeClick(rowNum, i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        {winner ? (\n          <div className=\"game-info\">\n            <ul>{saveBtn}</ul>\n          </div>\n        ) : null}\n      </div>\n      <footer>\n        <div>Made By John ❤</div>\n      </footer>\n    </div>\n  );\n}\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}